# 2. Дан список строк. Выполнить обработку списка (смотри текст задания) и сформировать на его основе строку
# Техническое задание:
# 1. Список может содержать произвольное кол-во элементов. Все его элементы - строки.
# 2. Примеры исходного списка:
#    ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#    ['примерно в', '23', 'часа', '8', 'минут', '03', 'секунд', 'температура', 'воздуха', 'была', '-5',
#    'градусов Цельсия', 'темп', 'воды', '+12', 'градусов', 'Цельсия']
# 3. Строки-элементы списка:
#       1. Время: любое целое число, без привязки к ограничениям на 60 минут/секунд и
#          24 часа, т.е. '79', 'минут' - это корректно. Пример: "1" "12" "75"
#       2. Температуры: любое целое число. Начинается со знаков + или -, но может
#          и быть без знака. Пример: "+5", "-7", "12";
#       3. Слова: просто символьные строки.
#       4. В начале и конце строк-чисел пробелов нет.
#       5. Строки-числа и строки-слова не обязательно идут точно через один.
# 4. Создать новый список и наполнить его элементами по схеме:
#       1. Обособить каждое целое число (исходного списка) кавычками (добавить элемент списка:
#          строку-кавычку до и после элемента списка, являющегося числом)
#       2. Дополнить это число нулём до двух целочисленных разрядов
#       3. Например исходный список:
#          ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов'].
#       4. Тогда новый список:
#          ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут',
#          'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов'].
#       5. Новый список вывести на экран
# 5. После окончательного формирования нового списка - сделать на его основе строку, соединив все элементы
#       1. Для примера выше: 'в "05" часов "17" минут температура воздуха была "+05" градусов'
#       2. Вывести строку на экран.
#       3. Обратите внимание на отсутствие "лишних" пробелов около кавычек,
#          например "08" минут - правильно, а " 08 " минут - неправильно.
# 6. Ваш алгоритм должен работать для любого подобного списка, а не только для приведенных примеров.
# 7. Регулярные выражения не используем. Учимся парсить строку самостоятельно.
# 8. Подтвердить правильность программы на трех приведенных тестах
# Задание повышенной сложности (задание со звездочкой)
# Не создавайте новый список. Это называется решить «in place». Измените существующий список,
# добавив элементы-кавычки в соответствии с условием задачи. Не добавляйте «лишних» элементов - только элементы-кавычки
# и не удаляйте из списка никаких элементов. Эта задача намного серьезнее, чем может сначала показаться.
# Если вы выбрали решать усложненный вариант - напишите об этом комментариях в ПЗ.

print('Пример №1')
my_list = [
    '+9', 'примерно в', '23', 'часа', '8', 'минут',
    '03', '05', 'секунд', 'температура', 'воздуха',
    'была', '5', 'градусов Цельсия', 'темп', 'воды',
    '+2.0', 'градусов', 'Цельсия', '-2', '11']
text = ''
print(f'Исходный список: {my_list}')
for idx, val in enumerate(my_list):
    if val.isdigit() or val[1:].isdigit():
        if idx != len(my_list) - 1 and my_list[idx + 1] == '"':
            continue
        elif len(val) == 1:
            val = f'0{val}'
            my_list[idx] = val
        elif val.find("+0") != 0 and val.find("-0") != 0 and val.find("0") != 0 and -1 <= int(val) // 10 <= 0:
            val = f'{val[:1]}0{val[-1:]}'
            my_list[idx] = val
        my_list.insert(idx + 1, '"')
        my_list.insert(idx, '"')
print(f'Форматированный список: {my_list}')
for idx, val in enumerate(my_list):
    if idx == len(my_list) - 1 or val.isdigit() or val[1:].isdigit():
        text += f'{val}'
    elif val == '"':
        text += f'{val}'
        if not (my_list[idx+1].isdigit() or my_list[idx+1][1:].isdigit()):
            text += ' '
    else:
        text += f'{val} '
print(f'Строка:{text}')

print('Пример №2')
my_list = [
    'примерно в', '23', 'часа', '8', 'минут',
    '03', 'секунд', 'температура', 'воздуха',
    'была', '-5', 'градусов Цельсия', 'темп',
    'воды', '+12', 'градусов', 'Цельсия']

text = ''
print(f'Исходный список: {my_list}')
for idx, val in enumerate(my_list):
    if val.isdigit() or val[1:].isdigit():
        if idx != len(my_list) - 1 and my_list[idx + 1] == '"':
            continue
        elif len(val) == 1:
            val = f'0{val}'
            my_list[idx] = val
        elif val.find("+0") != 0 and val.find("-0") != 0 and val.find("0") != 0 and -1 <= int(val) // 10 <= 0:
            val = f'{val[:1]}0{val[-1:]}'
            my_list[idx] = val
        my_list.insert(idx + 1, '"')
        my_list.insert(idx, '"')
print(f'Форматированный список: {my_list}')
for idx, val in enumerate(my_list):
    if idx == len(my_list) - 1 or val.isdigit() or val[1:].isdigit():
        text += f'{val}'
    elif val == '"':
        text += f'{val}'
        if not (my_list[idx+1].isdigit() or my_list[idx+1][1:].isdigit()):
            text += ' '
    else:
        text += f'{val} '
print(f'Строка:{text}')

print('Пример №3')
my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']

text = ''
print(f'Исходный список: {my_list}')
for idx, val in enumerate(my_list):
    if val.isdigit() or val[1:].isdigit():
        if idx != len(my_list) - 1 and my_list[idx + 1] == '"':
            continue
        elif len(val) == 1:
            val = f'0{val}'
            my_list[idx] = val
        elif val.find("+0") != 0 and val.find("-0") != 0 and val.find("0") != 0 and -1 <= int(val) // 10 <= 0:
            val = f'{val[:1]}0{val[-1:]}'
            my_list[idx] = val
        my_list.insert(idx + 1, '"')
        my_list.insert(idx, '"')
print(f'Форматированный список: {my_list}')
for idx, val in enumerate(my_list):
    if idx == len(my_list) - 1 or val.isdigit() or val[1:].isdigit():
        text += f'{val}'
    elif val == '"':
        text += f'{val}'
        if not (my_list[idx+1].isdigit() or my_list[idx+1][1:].isdigit()):
            text += ' '
    else:
        text += f'{val} '
print(f'Строка:{text}')